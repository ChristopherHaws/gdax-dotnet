<?xml version="1.0" encoding="utf-8"?>
<Roslynator>
	<Settings>
		<General>
			<PrefixFieldIdentifierWithUnderscore IsEnabled="false" />
		</General>
		<Refactorings>
			<Refactoring Id="RR0001" IsEnabled="false" />	<!-- AddBooleanComparison -->
			<Refactoring Id="RR0002" IsEnabled="true" /> 	<!-- AddBraces -->
			<Refactoring Id="RR0003" IsEnabled="true" /> 	<!-- AddBracesToIfElse -->
			<Refactoring Id="RR0004" IsEnabled="true" /> 	<!-- AddBracesToSwitchSection -->
			<Refactoring Id="RR0005" IsEnabled="false" />	<!-- AddBracesToSwitchSections -->
			<Refactoring Id="RR0006" IsEnabled="false" />	<!-- AddCastExpression -->
			<Refactoring Id="RR0007" IsEnabled="false" />	<!-- AddDefaultValueToParameter -->
			<Refactoring Id="RR0008" IsEnabled="false" />	<!-- AddDefaultValueToReturnStatement -->
			<Refactoring Id="RR0009" IsEnabled="true" /> 	<!-- AddExceptionToDocumentationComment -->
			<Refactoring Id="RR0010" IsEnabled="false" />	<!-- AddIdentifierToVariableDeclaration -->
			<Refactoring Id="RR0011" IsEnabled="true" /> 	<!-- AddParameterNameToArgument -->
			<Refactoring Id="RR0012" IsEnabled="true" /> 	<!-- AddParameterNameToParameter -->
			<Refactoring Id="RR0013" IsEnabled="false" />	<!-- AddUsingDirective -->
			<Refactoring Id="RR0014" IsEnabled="false" />	<!-- AddUsingStaticDirective -->
			<Refactoring Id="RR0015" IsEnabled="true" /> 	<!-- CallConfigureAwait -->
			<Refactoring Id="RR0016" IsEnabled="false" />	<!-- CallExtensionMethodAsInstanceMethod -->
			<Refactoring Id="RR0017" IsEnabled="false" />	<!-- CallToMethod -->
			<Refactoring Id="RR0018" IsEnabled="true" /> 	<!-- ChangeExplicitTypeToVar -->
			<Refactoring Id="RR0019" IsEnabled="false" />	<!-- ChangeMemberTypeAccordingToReturnExpression -->
			<Refactoring Id="RR0020" IsEnabled="false" />	<!-- ChangeMemberTypeAccordingToYieldReturnExpression -->
			<Refactoring Id="RR0021" IsEnabled="false" />	<!-- ChangeMethodReturnTypeToVoid -->
			<Refactoring Id="RR0022" IsEnabled="false" />	<!-- ChangeTypeAccordingToExpression -->
			<Refactoring Id="RR0023" IsEnabled="false" />	<!-- ChangeVarToExplicitType -->
			<Refactoring Id="RR0024" IsEnabled="true" /> 	<!-- CheckExpressionForNull -->
			<Refactoring Id="RR0025" IsEnabled="true" /> 	<!-- CheckParameterForNull -->
			<Refactoring Id="RR0026" IsEnabled="true" /> 	<!-- CollapseToInitializer -->
			<Refactoring Id="RR0027" IsEnabled="false" />	<!-- CommentOutMember -->
			<Refactoring Id="RR0028" IsEnabled="false" />	<!-- CommentOutStatement -->
			<Refactoring Id="RR0029" IsEnabled="false" />	<!-- CopyDocumentationCommentFromBaseMember -->
			<Refactoring Id="RR0030" IsEnabled="false" />	<!-- DuplicateArgument -->
			<Refactoring Id="RR0031" IsEnabled="false" />	<!-- DuplicateMember -->
			<Refactoring Id="RR0032" IsEnabled="false" />	<!-- DuplicateParameter -->
			<Refactoring Id="RR0033" IsEnabled="false" />	<!-- DuplicateStatement -->
			<Refactoring Id="RR0034" IsEnabled="false" />	<!-- ExpandAssignmentExpression -->
			<Refactoring Id="RR0035" IsEnabled="false" />	<!-- ExpandCoalesceExpression -->
			<Refactoring Id="RR0036" IsEnabled="false" />	<!-- ExpandEvent -->
			<Refactoring Id="RR0037" IsEnabled="false" />	<!-- ExpandExpressionBody -->
			<Refactoring Id="RR0038" IsEnabled="false" />	<!-- ExpandInitializer -->
			<Refactoring Id="RR0039" IsEnabled="false" />	<!-- ExpandLambdaExpressionBody -->
			<Refactoring Id="RR0040" IsEnabled="false" />	<!-- ExpandProperty -->
			<Refactoring Id="RR0041" IsEnabled="false" />	<!-- ExpandPropertyAndAddBackingField -->
			<Refactoring Id="RR0042" IsEnabled="false" />	<!-- ExtractDeclarationFromUsingStatement -->
			<Refactoring Id="RR0043" IsEnabled="false" />	<!-- ExtractExpressionFromCondition -->
			<Refactoring Id="RR0044" IsEnabled="false" />	<!-- ExtractGenericType -->
			<Refactoring Id="RR0045" IsEnabled="false" />	<!-- ExtractStatement -->
			<Refactoring Id="RR0046" IsEnabled="false" />	<!-- ExtractTypeDeclarationToNewFile -->
			<Refactoring Id="RR0047" IsEnabled="false" />	<!-- FormatAccessorBraces -->
			<Refactoring Id="RR0048" IsEnabled="false" />	<!-- FormatArgumentList -->
			<Refactoring Id="RR0049" IsEnabled="false" />	<!-- FormatBinaryExpression -->
			<Refactoring Id="RR0050" IsEnabled="false" />	<!-- FormatConditionalExpression -->
			<Refactoring Id="RR0051" IsEnabled="false" />	<!-- FormatExpressionChain -->
			<Refactoring Id="RR0052" IsEnabled="false" />	<!-- FormatInitializer -->
			<Refactoring Id="RR0053" IsEnabled="false" />	<!-- FormatParameterList -->
			<Refactoring Id="RR0054" IsEnabled="false" />	<!-- GenerateBaseConstructors -->
			<Refactoring Id="RR0055" IsEnabled="false" />	<!-- GenerateCombinedEnumMember -->
			<Refactoring Id="RR0056" IsEnabled="false" />	<!-- GenerateEnumMember -->
			<Refactoring Id="RR0057" IsEnabled="false" />	<!-- GenerateEnumValues -->
			<Refactoring Id="RR0058" IsEnabled="false" />	<!-- GenerateEventInvokingMethod -->
			<Refactoring Id="RR0059" IsEnabled="false" />	<!-- GenerateSwitchSections -->
			<Refactoring Id="RR0060" IsEnabled="false" />	<!-- InitializeLocalWithDefaultValue -->
			<Refactoring Id="RR0061" IsEnabled="false" />	<!-- InlineAliasExpression -->
			<Refactoring Id="RR0062" IsEnabled="false" />	<!-- InlineMethod -->
			<Refactoring Id="RR0063" IsEnabled="false" />	<!-- InsertStringInterpolation -->
			<Refactoring Id="RR0064" IsEnabled="true" /> 	<!-- IntroduceAndInitializeField -->
			<Refactoring Id="RR0065" IsEnabled="true" /> 	<!-- IntroduceAndInitializeProperty -->
			<Refactoring Id="RR0066" IsEnabled="true" /> 	<!-- IntroduceConstructor -->
			<Refactoring Id="RR0067" IsEnabled="false" />	<!-- IntroduceFieldToLockOn -->
			<Refactoring Id="RR0068" IsEnabled="false" />	<!-- IntroduceLocalFromStatementThatReturnsValue -->
			<Refactoring Id="RR0069" IsEnabled="false" />	<!-- MakeMemberAbstract -->
			<Refactoring Id="RR0070" IsEnabled="false" />	<!-- MakeMemberVirtual -->
			<Refactoring Id="RR0071" IsEnabled="false" />	<!-- MarkContainingClassAsAbstract -->
			<Refactoring Id="RR0072" IsEnabled="false" />	<!-- MarkMemberAsStatic -->
			<Refactoring Id="RR0073" IsEnabled="false" />	<!-- MergeAssignmentExpressionWithReturnStatement -->
			<Refactoring Id="RR0074" IsEnabled="false" />	<!-- MergeAttributes -->
			<Refactoring Id="RR0075" IsEnabled="false" />	<!-- MergeIfStatements -->
			<Refactoring Id="RR0076" IsEnabled="false" />	<!-- MergeInterpolationIntoInterpolatedString -->
			<Refactoring Id="RR0077" IsEnabled="false" />	<!-- MergeLocalDeclarations -->
			<Refactoring Id="RR0078" IsEnabled="false" />	<!-- MergeStringExpressions -->
			<Refactoring Id="RR0079" IsEnabled="false" />	<!-- NegateBinaryExpression -->
			<Refactoring Id="RR0080" IsEnabled="false" />	<!-- NegateBooleanLiteral -->
			<Refactoring Id="RR0081" IsEnabled="false" />	<!-- NegateIsExpression -->
			<Refactoring Id="RR0082" IsEnabled="false" />	<!-- NegateOperator -->
			<Refactoring Id="RR0083" IsEnabled="false" />	<!-- NotifyPropertyChanged -->
			<Refactoring Id="RR0084" IsEnabled="false" />	<!-- ParenthesizeExpression -->
			<Refactoring Id="RR0085" IsEnabled="true" /> 	<!-- PromoteLocalToParameter -->
			<Refactoring Id="RR0086" IsEnabled="false" />	<!-- RemoveAllComments -->
			<Refactoring Id="RR0087" IsEnabled="false" />	<!-- RemoveAllCommentsExceptDocumentationComments -->
			<Refactoring Id="RR0088" IsEnabled="false" />	<!-- RemoveAllDocumentationComments -->
			<Refactoring Id="RR0089" IsEnabled="false" />	<!-- RemoveAllMemberDeclarations -->
			<Refactoring Id="RR0090" IsEnabled="false" />	<!-- RemoveAllPreprocessorDirectives -->
			<Refactoring Id="RR0091" IsEnabled="true" /> 	<!-- RemoveAllRegionDirectives -->
			<Refactoring Id="RR0092" IsEnabled="false" />	<!-- RemoveAllStatements -->
			<Refactoring Id="RR0093" IsEnabled="false" />	<!-- RemoveAllSwitchSections -->
			<Refactoring Id="RR0094" IsEnabled="false" />	<!-- RemoveBraces -->
			<Refactoring Id="RR0095" IsEnabled="false" />	<!-- RemoveBracesFromIfElse -->
			<Refactoring Id="RR0096" IsEnabled="false" />	<!-- RemoveBracesFromSwitchSection -->
			<Refactoring Id="RR0097" IsEnabled="false" />	<!-- RemoveBracesFromSwitchSections -->
			<Refactoring Id="RR0098" IsEnabled="false" />	<!-- RemoveComment -->
			<Refactoring Id="RR0099" IsEnabled="false" />	<!-- RemoveConditionFromLastElse -->
			<Refactoring Id="RR0100" IsEnabled="false" />	<!-- RemoveDirectiveAndRelatedDirectives -->
			<Refactoring Id="RR0101" IsEnabled="false" />	<!-- RemoveEmptyLines -->
			<Refactoring Id="RR0102" IsEnabled="false" />	<!-- RemoveInterpolation -->
			<Refactoring Id="RR0103" IsEnabled="false" />	<!-- RemoveMember -->
			<Refactoring Id="RR0104" IsEnabled="false" />	<!-- RemoveMemberDeclarations -->
			<Refactoring Id="RR0105" IsEnabled="false" />	<!-- RemoveParameterNameFromArgument -->
			<Refactoring Id="RR0106" IsEnabled="false" />	<!-- RemoveParentheses -->
			<Refactoring Id="RR0107" IsEnabled="false" />	<!-- RemovePropertyInitializer -->
			<Refactoring Id="RR0108" IsEnabled="false" />	<!-- RemoveRegion -->
			<Refactoring Id="RR0109" IsEnabled="false" />	<!-- RemoveStatement -->
			<Refactoring Id="RR0110" IsEnabled="false" />	<!-- RemoveStatementsFromSwitchSections -->
			<Refactoring Id="RR0111" IsEnabled="false" />	<!-- RenameBackingFieldAccordingToPropertyName -->
			<Refactoring Id="RR0112" IsEnabled="false" />	<!-- RenameIdentifierAccordingToTypeName -->
			<Refactoring Id="RR0113" IsEnabled="false" />	<!-- RenameMethodAccordingToTypeName -->
			<Refactoring Id="RR0114" IsEnabled="false" />	<!-- RenameParameterAccordingToTypeName -->
			<Refactoring Id="RR0115" IsEnabled="false" />	<!-- RenamePropertyAccordingToTypeName -->
			<Refactoring Id="RR0116" IsEnabled="false" />	<!-- ReplaceAnyWithAllOrAllWithAny -->
			<Refactoring Id="RR0117" IsEnabled="false" />	<!-- ReplaceAsWithCast -->
			<Refactoring Id="RR0118" IsEnabled="false" />	<!-- ReplaceCastWithAs -->
			<Refactoring Id="RR0119" IsEnabled="false" />	<!-- ReplaceConditionalExpressionWithExpression -->
			<Refactoring Id="RR0120" IsEnabled="false" />	<!-- ReplaceConditionalExpressionWithIfElse -->
			<Refactoring Id="RR0121" IsEnabled="false" />	<!-- ReplaceConstantWithField -->
			<Refactoring Id="RR0122" IsEnabled="false" />	<!-- ReplaceCountWithLengthOrLengthWithCount -->
			<Refactoring Id="RR0123" IsEnabled="false" />	<!-- ReplaceDoStatementWithWhileStatement -->
			<Refactoring Id="RR0124" IsEnabled="true" /> 	<!-- ReplaceEqualsExpressionWithStringEquals -->
			<Refactoring Id="RR0125" IsEnabled="true" /> 	<!-- ReplaceEqualsExpressionWithStringIsNullOrEmpty -->
			<Refactoring Id="RR0126" IsEnabled="true" /> 	<!-- ReplaceEqualsExpressionWithStringIsNullOrWhiteSpace -->
			<Refactoring Id="RR0127" IsEnabled="false" />	<!-- ReplaceExpressionWithConstantValue -->
			<Refactoring Id="RR0128" IsEnabled="false" />	<!-- ReplaceFieldWithConstant -->
			<Refactoring Id="RR0129" IsEnabled="false" />	<!-- ReplaceForEachWithFor -->
			<Refactoring Id="RR0130" IsEnabled="true" /> 	<!-- ReplaceForWithForEach -->
			<Refactoring Id="RR0131" IsEnabled="false" />	<!-- ReplaceForWithWhile -->
			<Refactoring Id="RR0132" IsEnabled="false" />	<!-- ReplaceHexadecimalLiteralWithDecimalLiteral -->
			<Refactoring Id="RR0133" IsEnabled="true" /> 	<!-- ReplaceIfElseWithSwitch -->
			<Refactoring Id="RR0134" IsEnabled="false" />	<!-- ReplaceIncrementOperatorWithDecrementOperator -->
			<Refactoring Id="RR0135" IsEnabled="false" />	<!-- ReplaceInterpolatedStringWithInterpolationExpression -->
			<Refactoring Id="RR0136" IsEnabled="false" />	<!-- ReplaceInterpolatedStringWithStringLiteral -->
			<Refactoring Id="RR0137" IsEnabled="false" />	<!-- ReplaceMethodGroupWithLambda -->
			<Refactoring Id="RR0138" IsEnabled="false" />	<!-- ReplaceMethodWithProperty -->
			<Refactoring Id="RR0139" IsEnabled="false" />	<!-- ReplaceNullLiteralExpressionWithDefaultExpression -->
			<Refactoring Id="RR0140" IsEnabled="false" />	<!-- ReplacePrefixOperatorWithPostfixOperator -->
			<Refactoring Id="RR0141" IsEnabled="false" />	<!-- ReplacePropertyWithMethod -->
			<Refactoring Id="RR0142" IsEnabled="false" />	<!-- ReplaceRegularStringLiteralWithVerbatimStringLiteral -->
			<Refactoring Id="RR0143" IsEnabled="false" />	<!-- ReplaceStatementWithIfStatement -->
			<Refactoring Id="RR0144" IsEnabled="false" />	<!-- ReplaceStringContainsWithStringIndexOf -->
			<Refactoring Id="RR0145" IsEnabled="false" />	<!-- ReplaceStringFormatWithInterpolatedString -->
			<Refactoring Id="RR0146" IsEnabled="false" />	<!-- ReplaceStringLiteralWithCharacterLiteral -->
			<Refactoring Id="RR0147" IsEnabled="false" />	<!-- ReplaceSwitchWithIfElse -->
			<Refactoring Id="RR0148" IsEnabled="false" />	<!-- ReplaceVerbatimStringLiteralWithRegularStringLiteral -->
			<Refactoring Id="RR0149" IsEnabled="false" />	<!-- ReplaceVerbatimStringLiteralWithRegularStringLiterals -->
			<Refactoring Id="RR0150" IsEnabled="false" />	<!-- ReplaceWhileStatementWithDoStatement -->
			<Refactoring Id="RR0151" IsEnabled="false" />	<!-- ReplaceWhileWithFor -->
			<Refactoring Id="RR0152" IsEnabled="false" />	<!-- ReverseForLoop -->
			<Refactoring Id="RR0153" IsEnabled="false" />	<!-- SimplifyIf -->
			<Refactoring Id="RR0154" IsEnabled="false" />	<!-- SimplifyLambdaExpression -->
			<Refactoring Id="RR0155" IsEnabled="false" />	<!-- SortMemberDeclarations -->
			<Refactoring Id="RR0156" IsEnabled="false" />	<!-- SplitAttributes -->
			<Refactoring Id="RR0157" IsEnabled="false" />	<!-- SplitSwitchLabels -->
			<Refactoring Id="RR0158" IsEnabled="false" />	<!-- SplitVariableDeclaration -->
			<Refactoring Id="RR0159" IsEnabled="false" />	<!-- SwapExpressionsInBinaryExpression -->
			<Refactoring Id="RR0160" IsEnabled="false" />	<!-- SwapExpressionsInConditionalExpression -->
			<Refactoring Id="RR0161" IsEnabled="false" />	<!-- SwapMemberDeclarations -->
			<Refactoring Id="RR0162" IsEnabled="false" />	<!-- SwapStatementsInIfElse -->
			<Refactoring Id="RR0163" IsEnabled="false" />	<!-- Uncomment -->
			<Refactoring Id="RR0164" IsEnabled="false" />	<!-- UseBitwiseOperationInsteadOfCallingHasFlag -->
			<Refactoring Id="RR0165" IsEnabled="true" /> 	<!-- UseCoalesceExpressionInsteadOfIf -->
			<Refactoring Id="RR0166" IsEnabled="true" /> 	<!-- UseConditionalExpressionInsteadOfIf -->
			<Refactoring Id="RR0167" IsEnabled="false" />	<!-- UseElementAccessInsteadOfEnumerableMethod -->
			<Refactoring Id="RR0168" IsEnabled="false" />	<!-- UseEmptyStringLiteralInsteadOfStringEmpty -->
			<Refactoring Id="RR0169" IsEnabled="false" />	<!-- UseExpressionBodiedMember -->
			<Refactoring Id="RR0170" IsEnabled="true" /> 	<!-- UseLambdaExpressionInsteadOfAnonymousMethod -->
			<Refactoring Id="RR0171" IsEnabled="true" /> 	<!-- UseStringEmptyInsteadOfEmptyStringLiteral -->
			<Refactoring Id="RR0172" IsEnabled="false" />	<!-- WrapInCondition -->
			<Refactoring Id="RR0173" IsEnabled="false" />	<!-- WrapInElseClause -->
			<Refactoring Id="RR0174" IsEnabled="false" />	<!-- WrapInIfDirective -->
			<Refactoring Id="RR0175" IsEnabled="false" />	<!-- WrapInRegion -->
			<Refactoring Id="RR0176" IsEnabled="true" /> 	<!-- WrapInTryCatch -->
			<Refactoring Id="RR0177" IsEnabled="true" /> 	<!-- WrapInUsingStatement -->
			<Refactoring Id="RR0178" IsEnabled="false" />	<!-- AddTypeParameter -->
			<Refactoring Id="RR0179" IsEnabled="false" /> 	<!-- ImplementIEquatableOfT -->
			<Refactoring Id="RR0180" IsEnabled="false" />	<!-- InlineUsingStatic -->
		</Refactorings>
	</Settings>
</Roslynator>